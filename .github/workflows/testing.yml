name: Backend testing

on:
  pull_request:
    types:
      - labeled
    branches:
      - develop
      - main
  workflow_call:
    secrets:
      CODACY_PROJECT_TOKEN:
        required: true

jobs:
  build:
    if: ${{ github.event.label.name == 'ready' }}
    strategy:
      matrix:
        pyversion: ['3.11']

    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        env:
          MONGO_INITDB_ROOT_USERNAME: mongouser
          MONGO_INITDB_ROOT_PASSWORD: mongopass
        ports:
          - 27017:27017
        options: --health-cmd "echo 'db.runCommand(\"ping\").ok' | mongo localhost:27017/test --username mongouser --password mongopass --authenticationDatabase admin" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{matrix.pyversion}}
      uses: actions/setup-python@v4
      with:
        python-version: ${{matrix.pyversion}}
    - name: Install pipenv
      run: pip install pipenv
    - name: Env setup
      run: |
        cp example.env .env 
        cp .env.test.example .env.test
    - name: Prepare dependencies
      run: |
        pipenv install --dev
        pipenv install codacy-coverage
        pipenv install coverage
    - name: Run tests
      if: ${{ github.base_ref == 'develop' || github.base_ref == 'main'}}
      run: |
        pipenv run coverage run --branch --source=. -m pytest
        pipenv run coverage xml 
    - name: Codacy Coverage Reporter
      uses: codacy/codacy-coverage-reporter-action@v1
      with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml
